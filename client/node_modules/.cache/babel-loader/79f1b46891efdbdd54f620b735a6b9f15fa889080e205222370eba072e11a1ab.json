{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/randomBasicProjects/basicclaculator2/calc/client/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport { useState, useEffect } from \"react\";\nimport calc from \"./contracts/calculator.json\";\nimport { toBN } from 'web3-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(0);\n  const [val, setVal] = useState(null);\n  const [a, setA] = useState(\"\");\n  const [b, setB] = useState(\"\");\n  const [addresult, setAddResult] = useState(\"\");\n  const contract_address = calc.networks[\"5777\"].address;\n  const contract_abi = calc.abi;\n  // const parsecontract = JSON.parse(JSON.stringify(contract_abi))\n\n  const HttpProvider = \"http://127.0.0.1:7545\";\n  // const web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  const web3 = new Web3(new Web3.providers.HttpProvider(HttpProvider));\n  const contractData = new web3.eth.Contract(contract_abi, contract_address);\n  let accountmeta = 0;\n  const main = async () => {\n    const accounts = await web3.eth.getAccounts();\n    accountmeta = accounts[0];\n    setAccount(accountmeta);\n    console.log(account);\n  };\n\n  // const getcontract = async() => {\n  //   await contractData.methods.gettingdata().call().then(result => {\n\n  //     setData(result);\n  //     console.log(result);\n\n  //   });\n  //  // console.log(getval);\n  // };\n  const getcontract = async () => {\n    // await contractData.methods\n    //   .gettingdata()\n    //   .call()\n    //   .then((result) => {\n    //     console.log(result);\n    //     setData(result);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Error fetching data:\", error);\n    //   });\n\n    const resultBN = await contractData.methods.gettingdata().call();\n    const result = resultBN.toString();\n    console.log(result);\n    setVal(result);\n  };\n\n  //const Web3 = require(\"web3\");\n  const ethEnabled = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      window.web3 = new Web3(window.ethereum);\n      console.log(\"metamask exist\");\n      return true;\n    }\n    console.log(\"metamask not exist\");\n    return false;\n  };\n  const addHandler = async () => {\n    await contractData.methods.add(a, b).send({\n      from: account\n    });\n    const res = await contractData.methods.showresult().call();\n    console.log(res);\n    setAddResult(res.toString());\n    setA(\"\");\n  };\n  useEffect(() => {\n    main();\n    ethEnabled();\n    // getcontract();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [account, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"data: \", val]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getcontract,\n        children: \"get data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: a,\n        onChange: e => setA(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: b,\n        onChange: e => setB(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addHandler,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"addition is \", addresult, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rYF/GEWyHywFYYRaQ3JKoB27BDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Web3","useState","useEffect","calc","toBN","jsxDEV","_jsxDEV","App","_s","account","setAccount","val","setVal","a","setA","b","setB","addresult","setAddResult","contract_address","networks","address","contract_abi","abi","HttpProvider","web3","providers","contractData","eth","Contract","accountmeta","main","accounts","getAccounts","console","log","getcontract","resultBN","methods","gettingdata","call","result","toString","ethEnabled","window","ethereum","request","method","addHandler","add","send","from","res","showresult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/randomBasicProjects/basicclaculator2/calc/client/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport { useState, useEffect } from \"react\";\nimport calc from \"./contracts/calculator.json\";\nimport { toBN } from 'web3-utils';\n\nfunction App() {\n  const [account, setAccount] = useState(0);\n  const [val, setVal] = useState(null);\n  const [a,setA] = useState(\"\");\n  const [b,setB] = useState(\"\");\n  const [addresult,setAddResult] = useState(\"\");\n\n  const contract_address = calc.networks[\"5777\"].address;\n\n  const contract_abi = calc.abi;\n  // const parsecontract = JSON.parse(JSON.stringify(contract_abi))\n\n  const HttpProvider = \"http://127.0.0.1:7545\";\n  // const web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  const web3 = new Web3(new Web3.providers.HttpProvider(HttpProvider));\n  const contractData = new web3.eth.Contract(contract_abi, contract_address);\n\n  let accountmeta = 0;\n  const  main = async () => {\n    const  accounts = await web3.eth.getAccounts();\n    accountmeta = accounts[0];\n    setAccount(accountmeta);\n    console.log(account);\n  };\n\n  // const getcontract = async() => {\n  //   await contractData.methods.gettingdata().call().then(result => {\n\n  //     setData(result);\n  //     console.log(result);\n\n  //   });\n  //  // console.log(getval);\n  // };\n  const getcontract = async () => {\n    // await contractData.methods\n    //   .gettingdata()\n    //   .call()\n    //   .then((result) => {\n    //     console.log(result);\n    //     setData(result);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Error fetching data:\", error);\n    //   });\n\n    const resultBN = await contractData.methods.gettingdata().call();\n    const result = resultBN.toString(); \n    console.log(result);\n    setVal(result);\n  };\n\n  //const Web3 = require(\"web3\");\n  const ethEnabled = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      window.web3 = new Web3(window.ethereum);\n      console.log(\"metamask exist\");\n      return true;\n    }\n    console.log(\"metamask not exist\");\n    return false;\n  };\n\n\nconst addHandler =async () =>{\nawait contractData.methods.add(a,b).send({from: account});\nconst res = await contractData.methods.showresult().call();\nconsole.log(res);\nsetAddResult(res.toString());\n\nsetA(\"\")\n}\n\n  useEffect(() => {\n    main();\n    ethEnabled();\n    // getcontract();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {account}\n        <div>data: {val}</div>\n        <button onClick={getcontract}>get data</button>\n        <input type=\"number\" value={a} onChange={(e)=>setA(Number(e.target.value))}></input>\n        <input type=\"number\" value={b} onChange={(e)=>setB(Number(e.target.value))}></input>\n         <button onClick={addHandler}>add</button>\n         <span>addition is {addresult} </span>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}