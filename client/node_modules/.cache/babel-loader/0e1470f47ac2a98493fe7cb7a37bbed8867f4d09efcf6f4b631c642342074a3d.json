{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/Developer/blockchain/practice/randomBasicProjects/basicclaculator2/calc/client/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport { useState, useEffect } from \"react\";\nimport calc from \"./contracts/calc.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(0);\n  const contract_address = calc.networks[\"5777\"].address;\n  const contract_abi = calc.abi;\n  // const parsecontract = JSON.parse(JSON.stringify(contract_abi))\n\n  const HttpProvider = \"http://127.0.0.1:7545\";\n  // const web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  const web3 = new Web3(new Web3.providers.HttpProvider(HttpProvider));\n  const contractData = new web3.eth.Contract(contract_abi, contract_address);\n  let accountmeta = 0;\n  const main = async () => {\n    const accounts = await web3.eth.getAccounts();\n    accountmeta = accounts[0];\n    setAccount(accountmeta);\n    console.log(account);\n  };\n  main();\n\n  //const Web3 = require(\"web3\");\n  const ethEnabled = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      window.web3 = new Web3(window.ethereum);\n      console.log(\"metamask exist\");\n      return true;\n    }\n    return false;\n    console.log(\"metamask not exist\");\n  };\n  ethEnabled;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iaaqD7iwzQtiTIoDyVJmHUovtZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Web3","useState","useEffect","calc","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract_address","networks","address","contract_abi","abi","HttpProvider","web3","providers","contractData","eth","Contract","accountmeta","main","accounts","getAccounts","console","log","ethEnabled","window","ethereum","request","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/upendra/Desktop/Developer/blockchain/practice/randomBasicProjects/basicclaculator2/calc/client/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport { useState, useEffect } from \"react\";\nimport calc from \"./contracts/calc.json\";\n\nfunction App() {\n  const [account, setAccount] = useState(0);\n  const contract_address = calc.networks[\"5777\"].address;\n\n  const contract_abi = calc.abi;\n  // const parsecontract = JSON.parse(JSON.stringify(contract_abi))\n\n  const HttpProvider = \"http://127.0.0.1:7545\";\n  // const web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  const web3 = new Web3(new Web3.providers.HttpProvider(HttpProvider));\n  const contractData = new web3.eth.Contract(contract_abi, contract_address);\n\n  let accountmeta = 0;\n  const main = async () => {\n    const accounts = await web3.eth.getAccounts();\n    accountmeta = accounts[0];\n    setAccount(accountmeta);\n    console.log(account);\n  };\n\n  main();\n\n  //const Web3 = require(\"web3\");\n  const ethEnabled = async () => {\n    if (window.ethereum) {\n      await window.ethereum.request({method: 'eth_requestAccounts'});\n      window.web3 = new Web3(window.ethereum);\n      console.log(\"metamask exist\");\n      return true;\n    }\n    return false;\n    console.log(\"metamask not exist\");\n  }\n\n  ethEnabled\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">{account}</header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMS,gBAAgB,GAAGP,IAAI,CAACQ,QAAQ,CAAC,MAAM,CAAC,CAACC,OAAO;EAEtD,MAAMC,YAAY,GAAGV,IAAI,CAACW,GAAG;EAC7B;;EAEA,MAAMC,YAAY,GAAG,uBAAuB;EAC5C;EACA,MAAMC,IAAI,GAAG,IAAIhB,IAAI,CAAC,IAAIA,IAAI,CAACiB,SAAS,CAACF,YAAY,CAACA,YAAY,CAAC,CAAC;EACpE,MAAMG,YAAY,GAAG,IAAIF,IAAI,CAACG,GAAG,CAACC,QAAQ,CAACP,YAAY,EAAEH,gBAAgB,CAAC;EAE1E,IAAIW,WAAW,GAAG,CAAC;EACnB,MAAMC,IAAI,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,GAAG,CAACK,WAAW,CAAC,CAAC;IAC7CH,WAAW,GAAGE,QAAQ,CAAC,CAAC,CAAC;IACzBd,UAAU,CAACY,WAAW,CAAC;IACvBI,OAAO,CAACC,GAAG,CAAClB,OAAO,CAAC;EACtB,CAAC;EAEDc,IAAI,CAAC,CAAC;;EAEN;EACA,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAACC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAC9DH,MAAM,CAACZ,IAAI,GAAG,IAAIhB,IAAI,CAAC4B,MAAM,CAACC,QAAQ,CAAC;MACvCJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,OAAO,IAAI;IACb;IACA,OAAO,KAAK;IACZD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC;EAEDC,UAAU;EACV,oBACEtB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB5B,OAAA;MAAQ2B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEzB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAC9B,EAAA,CAxCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}